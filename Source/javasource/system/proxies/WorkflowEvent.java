// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package system.proxies;

public class WorkflowEvent implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowEventMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "System.WorkflowEvent";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		EventTime("EventTime"),
		EventType("EventType"),
		WorkflowEvent_Initiator("System.WorkflowEvent_Initiator");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowEvent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected WorkflowEvent(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowEventMendixObject)
	{
		if (workflowEventMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, workflowEventMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.workflowEventMendixObject = workflowEventMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static system.proxies.WorkflowEvent initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new system.proxies.WorkflowEvent(context, mendixObject);
	}

	public static system.proxies.WorkflowEvent load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return system.proxies.WorkflowEvent.initialize(context, mendixObject);
	}

	/**
	 * @return value of EventTime
	 */
	public final java.util.Date getEventTime()
	{
		return getEventTime(getContext());
	}

	/**
	 * @param context
	 * @return value of EventTime
	 */
	public final java.util.Date getEventTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.EventTime.toString());
	}

	/**
	 * Set value of EventTime
	 * @param eventtime
	 */
	public final void setEventTime(java.util.Date eventtime)
	{
		setEventTime(getContext(), eventtime);
	}

	/**
	 * Set value of EventTime
	 * @param context
	 * @param eventtime
	 */
	public final void setEventTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date eventtime)
	{
		getMendixObject().setValue(context, MemberNames.EventTime.toString(), eventtime);
	}

	/**
	 * Get value of EventType
	 * @param eventtype
	 */
	public final system.proxies.WorkflowEventType getEventType()
	{
		return getEventType(getContext());
	}

	/**
	 * @param context
	 * @return value of EventType
	 */
	public final system.proxies.WorkflowEventType getEventType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.EventType.toString());
		if (obj == null) {
			return null;
		}
		return system.proxies.WorkflowEventType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of EventType
	 * @param eventtype
	 */
	public final void setEventType(system.proxies.WorkflowEventType eventtype)
	{
		setEventType(getContext(), eventtype);
	}

	/**
	 * Set value of EventType
	 * @param context
	 * @param eventtype
	 */
	public final void setEventType(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.WorkflowEventType eventtype)
	{
		if (eventtype != null) {
			getMendixObject().setValue(context, MemberNames.EventType.toString(), eventtype.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.EventType.toString(), null);
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of WorkflowEvent_Initiator
	 */
	public final system.proxies.User getWorkflowEvent_Initiator() throws com.mendix.core.CoreException
	{
		return getWorkflowEvent_Initiator(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowEvent_Initiator
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.User getWorkflowEvent_Initiator(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.User result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowEvent_Initiator.toString());
		if (identifier != null) {
			result = system.proxies.User.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of WorkflowEvent_Initiator
	 * @param workflowevent_initiator
	 */
	public final void setWorkflowEvent_Initiator(system.proxies.User workflowevent_initiator)
	{
		setWorkflowEvent_Initiator(getContext(), workflowevent_initiator);
	}

	/**
	 * Set value of WorkflowEvent_Initiator
	 * @param context
	 * @param workflowevent_initiator
	 */
	public final void setWorkflowEvent_Initiator(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.User workflowevent_initiator)
	{
		if (workflowevent_initiator == null) {
			getMendixObject().setValue(context, MemberNames.WorkflowEvent_Initiator.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.WorkflowEvent_Initiator.toString(), workflowevent_initiator.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowEventMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final system.proxies.WorkflowEvent that = (system.proxies.WorkflowEvent) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
