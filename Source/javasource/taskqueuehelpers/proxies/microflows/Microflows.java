// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package taskqueuehelpers.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the TaskQueueHelpers module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RetrieveCompletionStateCountsBuilder(
		taskqueuehelpers.proxies.ChartContext _dummy
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.DS_RetrieveCompletionStateCounts");
		builder = builder.withParam("Dummy", _dummy);
		return builder;
	}

	public static java.util.List<taskqueuehelpers.proxies.CompletionStateCount> dS_RetrieveCompletionStateCounts(
		IContext context,
		taskqueuehelpers.proxies.ChartContext _dummy
	)
	{
		Object result = dS_RetrieveCompletionStateCountsBuilder(
				_dummy
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> taskqueuehelpers.proxies.CompletionStateCount.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RetrieveProcessedQueueCountBuilder(
		taskqueuehelpers.proxies.ChartContext _dummy
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.DS_RetrieveProcessedQueueCount");
		builder = builder.withParam("Dummy", _dummy);
		return builder;
	}

	public static java.util.List<taskqueuehelpers.proxies.ProcessedQueueCount> dS_RetrieveProcessedQueueCount(
		IContext context,
		taskqueuehelpers.proxies.ChartContext _dummy
	)
	{
		Object result = dS_RetrieveProcessedQueueCountBuilder(
				_dummy
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> taskqueuehelpers.proxies.ProcessedQueueCount.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RetrieveQueueCountsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.DS_RetrieveQueueCounts");
		return builder;
	}

	public static java.util.List<taskqueuehelpers.proxies.QueueCount> dS_RetrieveQueueCounts(IContext context)
	{
		Object result = dS_RetrieveQueueCountsBuilder().execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> taskqueuehelpers.proxies.QueueCount.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_RetrieveTaskRetriesBuilder(
		system.proxies.ProcessedQueueTask _processedQueueTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.DS_RetrieveTaskRetries");
		builder = builder.withParam("ProcessedQueueTask", _processedQueueTask);
		return builder;
	}

	public static java.util.List<system.proxies.ProcessedQueueTask> dS_RetrieveTaskRetries(
		IContext context,
		system.proxies.ProcessedQueueTask _processedQueueTask
	)
	{
		Object result = dS_RetrieveTaskRetriesBuilder(
				_processedQueueTask
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> system.proxies.ProcessedQueueTask.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder retrieveChartContextBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.RetrieveChartContext");
		return builder;
	}

	public static taskqueuehelpers.proxies.ChartContext retrieveChartContext(IContext context)
	{
		Object result = retrieveChartContextBuilder().execute(context);
		return result == null ? null : taskqueuehelpers.proxies.ChartContext.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder scE_CleanupProcessedQueueTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("TaskQueueHelpers.ScE_CleanupProcessedQueueTasks");
		return builder;
	}

	public static void scE_CleanupProcessedQueueTasks(IContext context)
	{
		scE_CleanupProcessedQueueTasksBuilder().execute(context);
	}
}
