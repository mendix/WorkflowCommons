// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowcommonsunittests.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the WorkflowCommonsUnitTests module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ExecuteAllWFCommonsUnitTestsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.ACT_ExecuteAllWFCommonsUnitTests");
		return builder;
	}

	public static void aCT_ExecuteAllWFCommonsUnitTests(IContext context)
	{
		aCT_ExecuteAllWFCommonsUnitTestsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder createAndStartDummyWorkflowBuilder(
		java.lang.String _action,
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.CreateAndStartDummyWorkflow");
		builder = builder.withParam("Action", _action);
		builder = builder.withParam("UnitTestRun", _unitTestRun);
		return builder;
	}

	public static void createAndStartDummyWorkflow(
		IContext context,
		java.lang.String _action,
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun
	)
	{
		createAndStartDummyWorkflowBuilder(
				_action,
				_unitTestRun
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder createAndStartExpenseRequestWorkflowBuilder(
		java.lang.String _action,
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.CreateAndStartExpenseRequestWorkflow");
		builder = builder.withParam("Action", _action);
		builder = builder.withParam("UnitTestRun", _unitTestRun);
		return builder;
	}

	public static void createAndStartExpenseRequestWorkflow(
		IContext context,
		java.lang.String _action,
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun
	)
	{
		createAndStartExpenseRequestWorkflowBuilder(
				_action,
				_unitTestRun
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder createDemoUsersForUnitTestBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.CreateDemoUsersForUnitTest");
		return builder;
	}

	public static void createDemoUsersForUnitTest(IContext context)
	{
		createDemoUsersForUnitTestBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_TestSuite_GetFailedUnitTestsBuilder(
		unittesting.proxies.TestSuite _testSuite
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.DS_TestSuite_GetFailedUnitTests");
		builder = builder.withParam("TestSuite", _testSuite);
		return builder;
	}

	public static java.util.List<unittesting.proxies.UnitTest> dS_TestSuite_GetFailedUnitTests(
		IContext context,
		unittesting.proxies.TestSuite _testSuite
	)
	{
		Object result = dS_TestSuite_GetFailedUnitTestsBuilder(
				_testSuite
			)
			.execute(context);
		return result == null ? null : com.mendix.utils.ListUtils.map((java.util.List<IMendixObject>) result, obj -> unittesting.proxies.UnitTest.initialize(context, obj));
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_Workflow_State_UnitTestBuilder(
		system.proxies.Workflow _workflow
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.OCh_Workflow_State_UnitTest");
		builder = builder.withParam("Workflow", _workflow);
		return builder;
	}

	public static void oCh_Workflow_State_UnitTest(
		IContext context,
		system.proxies.Workflow _workflow
	)
	{
		oCh_Workflow_State_UnitTestBuilder(
				_workflow
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder oCh_WorkflowUserTask_State_UnitTestBuilder(
		system.proxies.WorkflowUserTask _userTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.OCh_WorkflowUserTask_State_UnitTest");
		builder = builder.withParam("UserTask", _userTask);
		return builder;
	}

	public static void oCh_WorkflowUserTask_State_UnitTest(
		IContext context,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		oCh_WorkflowUserTask_State_UnitTestBuilder(
				_userTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_InitiateUnitTestsBuilder(
		system.proxies.HttpResponse _httpResponse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.PRS_InitiateUnitTests");
		builder = builder.withParam("httpResponse", _httpResponse);
		return builder;
	}

	public static void pRS_InitiateUnitTests(
		IContext context,
		system.proxies.HttpResponse _httpResponse
	)
	{
		pRS_InitiateUnitTestsBuilder(
				_httpResponse
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder pRS_PollUnitTestResultsBuilder(
		system.proxies.HttpResponse _httpResponse
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.PRS_PollUnitTestResults");
		builder = builder.withParam("httpResponse", _httpResponse);
		return builder;
	}

	public static unittesting.proxies.TestSuite pRS_PollUnitTestResults(
		IContext context,
		system.proxies.HttpResponse _httpResponse
	)
	{
		Object result = pRS_PollUnitTestResultsBuilder(
				_httpResponse
			)
			.execute(context);
		return result == null ? null : unittesting.proxies.TestSuite.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder setup_CleanUpBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Setup_CleanUp");
		return builder;
	}

	public static void setup_CleanUp(IContext context)
	{
		setup_CleanUpBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder setup_WorkflowsBuilder(
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun,
		java.lang.String _action,
		java.lang.Long _amount
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Setup_Workflows");
		builder = builder.withParam("UnitTestRun", _unitTestRun);
		builder = builder.withParam("Action", _action);
		builder = builder.withParam("Amount", _amount);
		return builder;
	}

	public static void setup_Workflows(
		IContext context,
		workflowcommonsunittests.proxies.UnitTestRun _unitTestRun,
		java.lang.String _action,
		java.lang.Long _amount
	)
	{
		setup_WorkflowsBuilder(
				_unitTestRun,
				_action,
				_amount
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_DashboardContext_ForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_DashboardContext_ForDummyWorkflow");
		return builder;
	}

	public static workflowcommons.proxies.DashboardContext sUB_DashboardContext_ForDummyWorkflow(IContext context)
	{
		Object result = sUB_DashboardContext_ForDummyWorkflowBuilder().execute(context);
		return result == null ? null : workflowcommons.proxies.DashboardContext.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_DummyWorkflow_CompleteTaskBuilder(
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_DummyWorkflow_CompleteTask");
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static void sUB_DummyWorkflow_CompleteTask(
		IContext context,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		sUB_DummyWorkflow_CompleteTaskBuilder(
				_workflowUserTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ExecuteAllWFCommonsUnitTestsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_ExecuteAllWFCommonsUnitTests");
		return builder;
	}

	public static void sUB_ExecuteAllWFCommonsUnitTests(IContext context)
	{
		sUB_ExecuteAllWFCommonsUnitTestsBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ExpenseRequest_UnitTestRun_ExecuteUnitTestsWhenAllSetupBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_ExpenseRequest_UnitTestRun_ExecuteUnitTestsWhenAllSetup");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void sUB_ExpenseRequest_UnitTestRun_ExecuteUnitTestsWhenAllSetup(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		sUB_ExpenseRequest_UnitTestRun_ExecuteUnitTestsWhenAllSetupBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ExpenseRequest_UnitTestRun_MarkAsReadyBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_ExpenseRequest_UnitTestRun_MarkAsReady");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void sUB_ExpenseRequest_UnitTestRun_MarkAsReady(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		sUB_ExpenseRequest_UnitTestRun_MarkAsReadyBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ExpenseRequest_UnitTestRun_VerifyAndExecuteBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_ExpenseRequest_UnitTestRun_VerifyAndExecute");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void sUB_ExpenseRequest_UnitTestRun_VerifyAndExecute(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		sUB_ExpenseRequest_UnitTestRun_VerifyAndExecuteBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_ExpenseRequestWorkflow_CompleteTaskBuilder(
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_ExpenseRequestWorkflow_CompleteTask");
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static void sUB_ExpenseRequestWorkflow_CompleteTask(
		IContext context,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		sUB_ExpenseRequestWorkflow_CompleteTaskBuilder(
				_workflowUserTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sub_JumpToEndWorkflowBuilder(
		system.proxies.Workflow _workflow
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Sub_JumpToEndWorkflow");
		builder = builder.withParam("Workflow", _workflow);
		return builder;
	}

	public static void sub_JumpToEndWorkflow(
		IContext context,
		system.proxies.Workflow _workflow
	)
	{
		sub_JumpToEndWorkflowBuilder(
				_workflow
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_RetrieveTestSuiteBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_RetrieveTestSuite");
		return builder;
	}

	public static unittesting.proxies.TestSuite sUB_RetrieveTestSuite(IContext context)
	{
		Object result = sUB_RetrieveTestSuiteBuilder().execute(context);
		return result == null ? null : unittesting.proxies.TestSuite.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_UT_Comment_AddBuilder(
		workflowcommons.proxies.WorkflowView _workflowView
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_UT_Comment_Add");
		builder = builder.withParam("WorkflowView", _workflowView);
		return builder;
	}

	public static workflowcommons.proxies.WorkflowComment sUB_UT_Comment_Add(
		IContext context,
		workflowcommons.proxies.WorkflowView _workflowView
	)
	{
		Object result = sUB_UT_Comment_AddBuilder(
				_workflowView
			)
			.execute(context);
		return result == null ? null : workflowcommons.proxies.WorkflowComment.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Workflow_SetOverdueBuilder(
		system.proxies.Workflow _workflow
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_Workflow_SetOverdue");
		builder = builder.withParam("Workflow", _workflow);
		return builder;
	}

	public static void sUB_Workflow_SetOverdue(
		IContext context,
		system.proxies.Workflow _workflow
	)
	{
		sUB_Workflow_SetOverdueBuilder(
				_workflow
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_Workflow_UnitTestRun_VerifyAndExecuteBuilder(
		system.proxies.Workflow _workflow
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_Workflow_UnitTestRun_VerifyAndExecute");
		builder = builder.withParam("Workflow", _workflow);
		return builder;
	}

	public static void sUB_Workflow_UnitTestRun_VerifyAndExecute(
		IContext context,
		system.proxies.Workflow _workflow
	)
	{
		sUB_Workflow_UnitTestRun_VerifyAndExecuteBuilder(
				_workflow
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_WorkflowUserTask_UnitTestRun_FollowUpActionsBuilder(
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.SUB_WorkflowUserTask_UnitTestRun_FollowUpActions");
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static void sUB_WorkflowUserTask_UnitTestRun_FollowUpActions(
		IContext context,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		sUB_WorkflowUserTask_UnitTestRun_FollowUpActionsBuilder(
				_workflowUserTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder tASK_StartDummyWorkflowForUnitTestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.TASK_StartDummyWorkflowForUnitTest");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void tASK_StartDummyWorkflowForUnitTest(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		tASK_StartDummyWorkflowForUnitTestBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder tASK_StartExpenseRequestWorkflowForUnitTestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.TASK_StartExpenseRequestWorkflowForUnitTest");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void tASK_StartExpenseRequestWorkflowForUnitTest(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		tASK_StartExpenseRequestWorkflowForUnitTestBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder tASK_WorkflowUserTask_ExecuteFollowupActionsBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.TASK_WorkflowUserTask_ExecuteFollowupActions");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void tASK_WorkflowUserTask_ExecuteFollowupActions(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		tASK_WorkflowUserTask_ExecuteFollowupActionsBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder teardownBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Teardown");
		return builder;
	}

	public static void teardown(IContext context)
	{
		teardownBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_Workflow_WorkflowAttachmentAddBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_Workflow_WorkflowAttachmentAdd");
		return builder;
	}

	public static boolean uT_Workflow_WorkflowAttachmentAdd(IContext context)
	{
		Object result = uT_Workflow_WorkflowAttachmentAddBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_Workflow_WorkflowCommentAddBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_Workflow_WorkflowCommentAdd");
		return builder;
	}

	public static boolean uT_Workflow_WorkflowCommentAdd(IContext context)
	{
		Object result = uT_Workflow_WorkflowCommentAddBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_AverageHandlingTimeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_AverageHandlingTime");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_AverageHandlingTime(IContext context)
	{
		Object result = uT_WorkflowDashboard_AverageHandlingTimeBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_AverageHandlingTimeForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_AverageHandlingTimeForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_AverageHandlingTimeForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_AverageHandlingTimeForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountAverageHandlingTimeBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountAverageHandlingTime");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountAverageHandlingTime(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountAverageHandlingTimeBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountAverageHandlingTimeForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountAverageHandlingTimeForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountAverageHandlingTimeForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountAverageHandlingTimeForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOntimeUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOntimeUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOntimeUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOntimeUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOntimeUserTasksForDummyBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOntimeUserTasksForDummy");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOntimeUserTasksForDummy(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOntimeUserTasksForDummyBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOnTimeWorkflowsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOnTimeWorkflows");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOnTimeWorkflows(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOnTimeWorkflowsBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOnTimeWorkflowsForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOnTimeWorkflowsForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOnTimeWorkflowsForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOnTimeWorkflowsForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOverdueUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOverdueUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOverdueUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOverdueUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOverdueUserTasksForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOverdueUserTasksForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOverdueUserTasksForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOverdueUserTasksForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOverdueWorkflowsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOverdueWorkflows");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOverdueWorkflows(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOverdueWorkflowsBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedOverdueWorkflowsForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedOverdueWorkflowsForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedOverdueWorkflowsForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedOverdueWorkflowsForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedUserTasksForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedUserTasksForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedUserTasksForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedUserTasksForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedWorkflowsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedWorkflows");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedWorkflows(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedWorkflowsBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountCompletedWorkflowsForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountCompletedWorkflowsForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountCompletedWorkflowsForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountCompletedWorkflowsForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountFailedUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountFailedUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountFailedUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountFailedUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountFailedUserTasksForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountFailedUserTasksForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountFailedUserTasksForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountFailedUserTasksForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountInProgressUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountInProgressUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountInProgressUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountInProgressUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountInProgressUserTasksForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountInProgressUserTasksForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountInProgressUserTasksForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountInProgressUserTasksForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountInProgressWorkflowsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountInProgressWorkflows");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountInProgressWorkflows(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountInProgressWorkflowsBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountInProgressWorkflowsForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountInProgressWorkflowsForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountInProgressWorkflowsForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountInProgressWorkflowsForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountOverdueUserTasksBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountOverdueUserTasks");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountOverdueUserTasks(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountOverdueUserTasksBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountOverdueUserTasksForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountOverdueUserTasksForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountOverdueUserTasksForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountOverdueUserTasksForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountOverdueWorkflowsBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountOverdueWorkflows");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountOverdueWorkflows(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountOverdueWorkflowsBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_CountOverdueWorkflowsForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_CountOverdueWorkflowsForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_CountOverdueWorkflowsForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_CountOverdueWorkflowsForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_RetrieveOrCreateDashboardContextBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_RetrieveOrCreateDashboardContext");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_RetrieveOrCreateDashboardContext(IContext context)
	{
		Object result = uT_WorkflowDashboard_RetrieveOrCreateDashboardContextBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_RetrieveOrCreateTaskSummaryBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_RetrieveOrCreateTaskSummary");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_RetrieveOrCreateTaskSummary(IContext context)
	{
		Object result = uT_WorkflowDashboard_RetrieveOrCreateTaskSummaryBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_RetrieveOrCreateTaskSummaryForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_RetrieveOrCreateTaskSummaryForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_RetrieveOrCreateTaskSummaryForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_RetrieveOrCreateTaskSummaryForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_RetrieveOrCreateWorkflowSummary");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummary(IContext context)
	{
		Object result = uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_RetrieveOrCreateWorkflowSummaryForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSeriesCreateOrUpdateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSeriesCreateOrUpdate");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSeriesCreateOrUpdate(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSeriesCreateOrUpdateBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSeriesCreateOrUpdateForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSeriesCreateOrUpdateForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSeriesCreateOrUpdateForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSeriesCreateOrUpdateForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdmin");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdmin(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSummaryCreateOrUpdateAdminForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSummaryCreateOrUpdateUser");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUser(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_TaskSummaryCreateOrUpdateUserForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_TestUpdateSettingsDefaultBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_TestUpdateSettingsDefault");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_TestUpdateSettingsDefault(IContext context)
	{
		Object result = uT_WorkflowDashboard_TestUpdateSettingsDefaultBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowSeriesCreateOrUpdate");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdate(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowSeriesCreateOrUpdateForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowSummaryCreateOrUpdate");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdate(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowSummaryCreateOrUpdateForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdate");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdate(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateForDummyWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateForDummyWorkflow");
		return builder;
	}

	public static boolean uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateForDummyWorkflow(IContext context)
	{
		Object result = uT_WorkflowDashboard_WorkflowTaskDetailsCreateOrUpdateForDummyWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowUserTask_AssignToMultipleUsersBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowUserTask_AssignToMultipleUsers");
		return builder;
	}

	public static boolean uT_WorkflowUserTask_AssignToMultipleUsers(IContext context)
	{
		Object result = uT_WorkflowUserTask_AssignToMultipleUsersBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowUserTask_AssignToNoneTargetedUserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowUserTask_AssignToNoneTargetedUser");
		return builder;
	}

	public static boolean uT_WorkflowUserTask_AssignToNoneTargetedUser(IContext context)
	{
		Object result = uT_WorkflowUserTask_AssignToNoneTargetedUserBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowUserTask_AssignToUserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowUserTask_AssignToUser");
		return builder;
	}

	public static boolean uT_WorkflowUserTask_AssignToUser(IContext context)
	{
		Object result = uT_WorkflowUserTask_AssignToUserBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_WorkflowUserTask_UnassignFromUserBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_WorkflowUserTask_UnassignFromUser");
		return builder;
	}

	public static boolean uT_WorkflowUserTask_UnassignFromUser(IContext context)
	{
		Object result = uT_WorkflowUserTask_UnassignFromUserBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_AbortFailedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_AbortFailedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_AbortFailedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_AbortFailedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_AbortIncompatibleWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_AbortIncompatibleWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_AbortIncompatibleWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_AbortIncompatibleWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_AbortInProgressWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_AbortInProgressWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_AbortInProgressWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_AbortInProgressWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_AbortPausedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_AbortPausedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_AbortPausedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_AbortPausedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_ContinueIncompatibleWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_ContinueIncompatibleWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_ContinueIncompatibleWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_ContinueIncompatibleWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_JumpToEndWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_JumpToEndWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_JumpToEndWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_JumpToEndWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_PauseInProgressWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_PauseInProgressWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_PauseInProgressWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_PauseInProgressWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_RestartAbortedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_RestartAbortedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_RestartAbortedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_RestartAbortedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_RestartFailedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_RestartFailedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_RestartFailedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_RestartFailedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_RestartIncompatibleWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_RestartIncompatibleWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_RestartIncompatibleWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_RestartIncompatibleWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_RetryFailedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_RetryFailedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_RetryFailedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_RetryFailedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder uT_ZWorkflow_UnpausePausedWorkflowBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.UT_ZWorkflow_UnpausePausedWorkflow");
		return builder;
	}

	public static boolean uT_ZWorkflow_UnpausePausedWorkflow(IContext context)
	{
		Object result = uT_ZWorkflow_UnpausePausedWorkflowBuilder().execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wF_FailedWorkflow_SetReadyForTestingBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.WF_FailedWorkflow_SetReadyForTesting");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void wF_FailedWorkflow_SetReadyForTesting(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		wF_FailedWorkflow_SetReadyForTestingBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wFS_DummySystemTaskBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.WFS_DummySystemTask");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static boolean wFS_DummySystemTask(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		Object result = wFS_DummySystemTaskBuilder(
				_expenseRequest
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workflow_ChangeStateBuilder(
		system.proxies.Workflow _workflow,
		java.lang.String _action
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Workflow_ChangeState");
		builder = builder.withParam("Workflow", _workflow);
		builder = builder.withParam("Action", _action);
		return builder;
	}

	public static void workflow_ChangeState(
		IContext context,
		system.proxies.Workflow _workflow,
		java.lang.String _action
	)
	{
		workflow_ChangeStateBuilder(
				_workflow,
				_action
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workflow_MarkIncompatibleBuilder(
		system.proxies.Workflow _workflow
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.Workflow_MarkIncompatible");
		builder = builder.withParam("Workflow", _workflow);
		return builder;
	}

	public static void workflow_MarkIncompatible(
		IContext context,
		system.proxies.Workflow _workflow
	)
	{
		workflow_MarkIncompatibleBuilder(
				_workflow
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workflowUserTask_CompleteDummyTaskInQueueBuilder(
		administration.proxies.Account _account,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.WorkflowUserTask_CompleteDummyTaskInQueue");
		builder = builder.withParam("Account", _account);
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static void workflowUserTask_CompleteDummyTaskInQueue(
		IContext context,
		administration.proxies.Account _account,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		workflowUserTask_CompleteDummyTaskInQueueBuilder(
				_account,
				_workflowUserTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workflowUserTask_CompleteTaskInQueueBuilder(
		administration.proxies.Account _account,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.WorkflowUserTask_CompleteTaskInQueue");
		builder = builder.withParam("Account", _account);
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static void workflowUserTask_CompleteTaskInQueue(
		IContext context,
		administration.proxies.Account _account,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		workflowUserTask_CompleteTaskInQueueBuilder(
				_account,
				_workflowUserTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder workflowUserTask_HasExpectedStateBuilder(
		system.proxies.WorkflowUserTask _workflowUserTask,
		system.proxies.WorkflowUserTaskState _expectedWorkflowTaskState,
		java.lang.String _messagePrefix
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("WorkflowCommonsUnitTests.WorkflowUserTask_HasExpectedState");
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		builder = builder.withParam("ExpectedWorkflowTaskState", _expectedWorkflowTaskState == null ? null : _expectedWorkflowTaskState.name());
		builder = builder.withParam("MessagePrefix", _messagePrefix);
		return builder;
	}

	public static boolean workflowUserTask_HasExpectedState(
		IContext context,
		system.proxies.WorkflowUserTask _workflowUserTask,
		system.proxies.WorkflowUserTaskState _expectedWorkflowTaskState,
		java.lang.String _messagePrefix
	)
	{
		Object result = workflowUserTask_HasExpectedStateBuilder(
				_workflowUserTask,
				_expectedWorkflowTaskState,
				_messagePrefix
			)
			.execute(context);
		return (boolean) result;
	}
}
