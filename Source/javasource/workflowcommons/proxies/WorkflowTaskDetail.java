// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowcommons.proxies;

public class WorkflowTaskDetail implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowTaskDetailMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "WorkflowCommons.WorkflowTaskDetail";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TaskName("TaskName"),
		TaskAverageHandlingTime("TaskAverageHandlingTime"),
		WorkflowTaskDetail_DashboardContext("WorkflowCommons.WorkflowTaskDetail_DashboardContext");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowTaskDetail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected WorkflowTaskDetail(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowTaskDetailMendixObject)
	{
		if (workflowTaskDetailMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, workflowTaskDetailMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.workflowTaskDetailMendixObject = workflowTaskDetailMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static workflowcommons.proxies.WorkflowTaskDetail initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new workflowcommons.proxies.WorkflowTaskDetail(context, mendixObject);
	}

	public static workflowcommons.proxies.WorkflowTaskDetail load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return workflowcommons.proxies.WorkflowTaskDetail.initialize(context, mendixObject);
	}

	/**
	 * @return value of TaskName
	 */
	public final java.lang.String getTaskName()
	{
		return getTaskName(getContext());
	}

	/**
	 * @param context
	 * @return value of TaskName
	 */
	public final java.lang.String getTaskName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TaskName.toString());
	}

	/**
	 * Set value of TaskName
	 * @param taskname
	 */
	public final void setTaskName(java.lang.String taskname)
	{
		setTaskName(getContext(), taskname);
	}

	/**
	 * Set value of TaskName
	 * @param context
	 * @param taskname
	 */
	public final void setTaskName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String taskname)
	{
		getMendixObject().setValue(context, MemberNames.TaskName.toString(), taskname);
	}

	/**
	 * @return value of TaskAverageHandlingTime
	 */
	public final java.math.BigDecimal getTaskAverageHandlingTime()
	{
		return getTaskAverageHandlingTime(getContext());
	}

	/**
	 * @param context
	 * @return value of TaskAverageHandlingTime
	 */
	public final java.math.BigDecimal getTaskAverageHandlingTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.TaskAverageHandlingTime.toString());
	}

	/**
	 * Set value of TaskAverageHandlingTime
	 * @param taskaveragehandlingtime
	 */
	public final void setTaskAverageHandlingTime(java.math.BigDecimal taskaveragehandlingtime)
	{
		setTaskAverageHandlingTime(getContext(), taskaveragehandlingtime);
	}

	/**
	 * Set value of TaskAverageHandlingTime
	 * @param context
	 * @param taskaveragehandlingtime
	 */
	public final void setTaskAverageHandlingTime(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal taskaveragehandlingtime)
	{
		getMendixObject().setValue(context, MemberNames.TaskAverageHandlingTime.toString(), taskaveragehandlingtime);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of WorkflowTaskDetail_DashboardContext
	 */
	public final workflowcommons.proxies.DashboardContext getWorkflowTaskDetail_DashboardContext() throws com.mendix.core.CoreException
	{
		return getWorkflowTaskDetail_DashboardContext(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowTaskDetail_DashboardContext
	 * @throws com.mendix.core.CoreException
	 */
	public final workflowcommons.proxies.DashboardContext getWorkflowTaskDetail_DashboardContext(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		workflowcommons.proxies.DashboardContext result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowTaskDetail_DashboardContext.toString());
		if (identifier != null) {
			result = workflowcommons.proxies.DashboardContext.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of WorkflowTaskDetail_DashboardContext
	 * @param workflowtaskdetail_dashboardcontext
	 */
	public final void setWorkflowTaskDetail_DashboardContext(workflowcommons.proxies.DashboardContext workflowtaskdetail_dashboardcontext)
	{
		setWorkflowTaskDetail_DashboardContext(getContext(), workflowtaskdetail_dashboardcontext);
	}

	/**
	 * Set value of WorkflowTaskDetail_DashboardContext
	 * @param context
	 * @param workflowtaskdetail_dashboardcontext
	 */
	public final void setWorkflowTaskDetail_DashboardContext(com.mendix.systemwideinterfaces.core.IContext context, workflowcommons.proxies.DashboardContext workflowtaskdetail_dashboardcontext)
	{
		if (workflowtaskdetail_dashboardcontext == null) {
			getMendixObject().setValue(context, MemberNames.WorkflowTaskDetail_DashboardContext.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.WorkflowTaskDetail_DashboardContext.toString(), workflowtaskdetail_dashboardcontext.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowTaskDetailMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final workflowcommons.proxies.WorkflowTaskDetail that = (workflowcommons.proxies.WorkflowTaskDetail) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
