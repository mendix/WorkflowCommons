// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package expenserequestexample.proxies.microflows;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public final class Microflows
{
	/**
	 * Private constructor to prevent instantiation of this class. 
	 */
	private Microflows() {}

	// These are the microflows for the ExpenseRequestExample module
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ApproveExpenseRequestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_ApproveExpenseRequest");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		builder = builder.withParam("UserTask", _userTask);
		return builder;
	}

	public static void aCT_ApproveExpenseRequest(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		aCT_ApproveExpenseRequestBuilder(
				_expenseRequest,
				_userTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_ApproveExpenseRequest_SecondaryBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_ApproveExpenseRequest_Secondary");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		builder = builder.withParam("UserTask", _userTask);
		return builder;
	}

	public static void aCT_ApproveExpenseRequest_Secondary(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		aCT_ApproveExpenseRequest_SecondaryBuilder(
				_expenseRequest,
				_userTask
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Expense_NewBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_Expense_New");
		return builder;
	}

	public static void aCT_Expense_New(IContext context)
	{
		aCT_Expense_NewBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Expense_SaveBuilder(
		expenserequestexample.proxies.Expense _expense
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_Expense_Save");
		builder = builder.withParam("Expense", _expense);
		return builder;
	}

	public static void aCT_Expense_Save(
		IContext context,
		expenserequestexample.proxies.Expense _expense
	)
	{
		aCT_Expense_SaveBuilder(
				_expense
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_Expense_StartParallelWorkflowBuilder(
		expenserequestexample.proxies.Expense _expense
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_Expense_StartParallelWorkflow");
		builder = builder.withParam("Expense", _expense);
		return builder;
	}

	public static void aCT_Expense_StartParallelWorkflow(
		IContext context,
		expenserequestexample.proxies.Expense _expense
	)
	{
		aCT_Expense_StartParallelWorkflowBuilder(
				_expense
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RejectExpenseRequestBuilder(
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_RejectExpenseRequest");
		builder = builder.withParam("UserTask", _userTask);
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void aCT_RejectExpenseRequest(
		IContext context,
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		aCT_RejectExpenseRequestBuilder(
				_userTask,
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_RejectExpenseRequest_SecondaryBuilder(
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_RejectExpenseRequest_Secondary");
		builder = builder.withParam("UserTask", _userTask);
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void aCT_RejectExpenseRequest_Secondary(
		IContext context,
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		aCT_RejectExpenseRequest_SecondaryBuilder(
				_userTask,
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder aCT_SetMarkAllWorkflowsOverdueBuilder()
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.ACT_SetMarkAllWorkflowsOverdue");
		return builder;
	}

	public static void aCT_SetMarkAllWorkflowsOverdue(IContext context)
	{
		aCT_SetMarkAllWorkflowsOverdueBuilder().execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkflowTask_RetrieveExpenseRequestBuilder(
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.DS_WorkflowTask_RetrieveExpenseRequest");
		builder = builder.withParam("WorkflowUserTask", _workflowUserTask);
		return builder;
	}

	public static expenserequestexample.proxies.ExpenseRequest dS_WorkflowTask_RetrieveExpenseRequest(
		IContext context,
		system.proxies.WorkflowUserTask _workflowUserTask
	)
	{
		Object result = dS_WorkflowTask_RetrieveExpenseRequestBuilder(
				_workflowUserTask
			)
			.execute(context);
		return result == null ? null : expenserequestexample.proxies.ExpenseRequest.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder dS_WorkflowUserTask_ParallelWorkflow_ContextBuilder(
		system.proxies.WorkflowUserTask _userTask
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.DS_WorkflowUserTask_ParallelWorkflow_Context");
		builder = builder.withParam("UserTask", _userTask);
		return builder;
	}

	public static expenserequestexample.proxies.ExpenseRequest dS_WorkflowUserTask_ParallelWorkflow_Context(
		IContext context,
		system.proxies.WorkflowUserTask _userTask
	)
	{
		Object result = dS_WorkflowUserTask_ParallelWorkflow_ContextBuilder(
				_userTask
			)
			.execute(context);
		return result == null ? null : expenserequestexample.proxies.ExpenseRequest.initialize(context, (IMendixObject) result);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder sUB_StartExpenseRequestBuilder(
		expenserequestexample.proxies.Expense _expense
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.SUB_StartExpenseRequest");
		builder = builder.withParam("Expense", _expense);
		return builder;
	}

	public static void sUB_StartExpenseRequest(
		IContext context,
		expenserequestexample.proxies.Expense _expense
	)
	{
		sUB_StartExpenseRequestBuilder(
				_expense
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_ExpenseBuilder(
		expenserequestexample.proxies.Expense _expense
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.VAL_Expense");
		builder = builder.withParam("Expense", _expense);
		return builder;
	}

	public static boolean vAL_Expense(
		IContext context,
		expenserequestexample.proxies.Expense _expense
	)
	{
		Object result = vAL_ExpenseBuilder(
				_expense
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder vAL_ExpenseRequestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.VAL_ExpenseRequest");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static boolean vAL_ExpenseRequest(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		Object result = vAL_ExpenseRequestBuilder(
				_expenseRequest
			)
			.execute(context);
		return (boolean) result;
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wF_ParallelWorkflow_TestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.WF_ParallelWorkflow_Test");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void wF_ParallelWorkflow_Test(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		wF_ParallelWorkflow_TestBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wF_ReimburseExpenseRequestBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.WF_ReimburseExpenseRequest");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void wF_ReimburseExpenseRequest(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		wF_ReimburseExpenseRequestBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wF_SubWorkflow_DoNothingBuilder(
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.WF_SubWorkflow_DoNothing");
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void wF_SubWorkflow_DoNothing(
		IContext context,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		wF_SubWorkflow_DoNothingBuilder(
				_expenseRequest
			)
			.execute(context);
	}
	public static com.mendix.core.actionmanagement.MicroflowCallBuilder wOC_ExecuteFollowupActionsBuilder(
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		com.mendix.core.actionmanagement.MicroflowCallBuilder builder = Core.microflowCall("ExpenseRequestExample.WOC_ExecuteFollowupActions");
		builder = builder.withParam("UserTask", _userTask);
		builder = builder.withParam("ExpenseRequest", _expenseRequest);
		return builder;
	}

	public static void wOC_ExecuteFollowupActions(
		IContext context,
		system.proxies.WorkflowUserTask _userTask,
		expenserequestexample.proxies.ExpenseRequest _expenseRequest
	)
	{
		wOC_ExecuteFollowupActionsBuilder(
				_userTask,
				_expenseRequest
			)
			.execute(context);
	}
}
